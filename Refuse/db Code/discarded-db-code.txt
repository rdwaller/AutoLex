//===DORMANT CODE===//

  //=== root/server.js===/
    //const dotenv = require('dotenv').config();
    //const path = require('path');
    //const expressValidator = require('express-validator');
    //const Signature = require('./models/signature.js')
    //const TextInput = require('./models/textModel.js');
    //const url = 'mongodb://localhost:27017/signatures';
    //const mongoose = require('mongoose');
    //const Text = require ('./models/text.js');

    /* START MONGOOSE */
    /*
      //Set up default mongoose connection
    const dbUri = process.env.DB_URI;

    mongoose.connect(dbUri, function (err, db) {
      if (err) {
        console.log('Unable to connect to the mongoDB server. Error:', err);
      } else {
        console.log('Connection established to', dbUri);
      }
    });
      //Get Mongoose to use the global promise library
    mongoose.Promise = global.Promise;
      //Get the default connection
    var db = mongoose.connection;
      //Bind connection to error event (to get notification of connection errors)
    db.on('error', console.error.bind(console, 'MongoDB connection error'));
    */
    /* END MONGOOSE */

  //=== root/populatedb.js ===//
    #! /usr/bin/env node

    console.log('This script adds a text to the db - e.g.: populatedb mongodb://your_username:your_password@your_dabase_url');

    // Get arguments passed on command line
    var userArgs = process.argv.slice(2);
    if (!userArgs[0].startsWith('mongodb://')) {
        console.log('ERROR: You need to specify a valid mongodb URL as the first argument');
        return
    }

    const async = require('async')
    const Text = require('./models/text')


    const mongoose = require('mongoose');
    const mongoDB = userArgs[0];
    mongoose.connect(mongoDB);
    mongoose.Promise = global.Promise;
    const db = mongoose.connection;
    mongoose.connection.on('error', console.error.bind(console, 'MongoDB connection error:'));

    var texts = []

    function textCreate(text_string, cb) {
      textdetail = {text_string:text_string }
      
      var text = new Text(textdetail);
          
      text.save(function (err) {
        if (err) {
          cb(err, null)
          return
        }
        console.log('New Text: ' + text);
        texts.push(text)
        cb(null, text)
      }  );
    }


    function createTexts(cb) {
        async.parallel([
            function(callback) {
              textCreate('Who looks outside, dreams; who looks inside, awakes.', callback);
            }
          ],
          cb);
    }

    async.series([
        createTexts
    ],
    // Optional callback
    function(err, results) {
        if (err) {
            console.log('FINAL ERR: '+err);
        }
        else {
            console.log('Texts created');
        }
        // All done, disconnect from database
        mongoose.connection.close();
    });

  //=== root/controllers/textController.js ===//
    const Text = require('../models/text');

    exports.text_create_post = function(req, res) {
      res.sent('NOT IMPLEMENTED: Author create POST');
    };

  //=== root/models/signature.js ===//
    const mongoose = require('mongoose');

    let Schema = mongoose.Schema;

    const signatureSchema = new Schema({
      guestSignature: {
        type: mongoose.Schema.Types.Mixed,
        required: true,
      },
      message: {
        type: mongoose.Schema.Types.Mixed,
        required: true,
      },
    })

    const Signature = mongoose.model('Signature', signatureSchema);

    module.exports = Signature;
  
  //=== root/models/textModel.js ===//
    const mongoose = require('mongoose');
    const Schema = mongoose.Schema;

    //create Text schema
    const textSchema = new Schema({
      submittedText: Object
    });

    const TextInput = mongoose.model('TextInput', textSchema);

    module.exports = TextInput;
	
// root/routes/routes.js //
  //=== from top of file ===//
    //const mongoose = require('mongoose');
    //const TextInput = require('../models/textModel.js');

  /* router.post('/textSubmissions', function(req, res) {

    TextInput.create({
      submittedText: req.body.textSubmission
    }).then(console.log('POST request received'));
    
  });

  router.get('/textSubmissions', function(req, res) {
    console.log('GET request received');
  }); */
//=========================//